<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    
    <!-- enable autowire -->
	<context:annotation-config />

	<!-- enable transaction demarcation with annotations -->
	<tx:annotation-driven />

	<context:property-placeholder
		ignore-resource-not-found="true" location="classpath*:constant.properties" />

	<bean id="SpringConfigTool" class="kyj.utils.SpringConfigTool" />

	<import resource="dataSource/sqlserver/dataSource_user.xml" />
	<import resource="dataSource/sqlserver/dataSource_house.xml" />
	<import resource="dataSource/sqlserver/dataSource_webDb.xml" />

	<!-- spring注入 -->
	<context:component-scan base-package="com.kuaiyoujia.service"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Component" />
	</context:component-scan>
    <!-- 要调用的工作类 -->
    <bean id="job1" class="com.kyj.data.analyze.service.ProcessService"></bean>
    <!-- 定义调用对象和调用对象的方法 -->
    <bean id="jobDetail_1"
      class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 调用的类 -->
        <property name="targetObject">
            <ref bean="job1" />
        </property>
        <!-- 调用类中的方法 -->
        <property name="targetMethod">
            <value>process</value>
        </property>
    </bean>
    <bean id="jobDetail_2"
      class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 调用的类 -->
        <property name="targetObject">
            <ref bean="job1" />
        </property>
        <!-- 调用类中的方法 -->
        <property name="targetMethod">
            <value>Proemail</value>
        </property>
    </bean>
    <bean id="jobDetail_3"
      class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 调用的类 -->
        <property name="targetObject">
            <ref bean="job1" />
        </property>
        <!-- 调用类中的方法 -->
        <property name="targetMethod">
            <value>sendCrawlerHouseCount</value>
        </property>
    </bean>
    <!-- 定义触发时间 -->
    <bean id="doTime_1" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail">
            <ref bean="jobDetail_1" />
        </property>
        <!-- cron表达式 -->
        <property name="cronExpression">
            <!-- 每天早上8点执行一次 -->
            <value>0 0 8 * * ?</value>
            <!--每三秒触发一次-->
            <!--<value>0/3 * * * * ?</value>-->
        </property>
    </bean>
    <bean id="doTime_2" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail">
            <ref bean="jobDetail_2" />
        </property>
        <!-- cron表达式 -->
        <property name="cronExpression">
            <!-- 每天早上8点执行一次 -->
            <value>0 0 2 * * ?</value>
            <!--每三秒触发一次-->
            <!--<value>0/3 * * * * ?</value>-->
        </property>
    </bean>
    <bean id="doTime_3" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail">
            <ref bean="jobDetail_3" />
        </property>
        <!-- cron表达式 -->
        <property name="cronExpression">
            <!-- 每天早上8点执行一次 -->
            <value>0 0 8 * * ?</value>
            <!--每三秒触发一次-->
            <!--<value>0/3 * * * * ?</value>-->
        </property>
    </bean>
    <!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序 -->
    <bean id="startQuertz" lazy-init="false" autowire="no"
      class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="doTime_1" />
                <ref bean="doTime_2" />
                <ref bean="doTime_3" />
            </list>
        </property>
    </bean>

</beans> 