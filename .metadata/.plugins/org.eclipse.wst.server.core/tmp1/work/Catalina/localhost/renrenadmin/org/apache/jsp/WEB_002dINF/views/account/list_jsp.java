/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.24
 * Generated at: 2015-09-29 07:16:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.account;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.renrentui.renrencore.util.PropertyUtils;
import com.renrentui.renrenentity.AccountInfo;
import com.renrentui.renrenentity.RoleInfo;
import java.util.List;
import com.renrentui.renrencore.util.HtmlHelper;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.renrentui.renrencore.util.PropertyUtils");
    _jspx_imports_classes.add("com.renrentui.renrenentity.RoleInfo");
    _jspx_imports_classes.add("com.renrentui.renrenentity.AccountInfo");
    _jspx_imports_classes.add("com.renrentui.renrencore.util.HtmlHelper");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String basePath =PropertyUtils.getProperty("java.renrenadmin.url");
List<RoleInfo> roleData = (List<RoleInfo>) request.getAttribute("roleData");

      out.write("\r\n");
      out.write("<script src=\"");
      out.print(basePath);
      out.write("/js/bootstrap-treeview.js\"></script>\r\n");
      out.write("<div class=\"wrapper wrapper-content animated fadeInRight\">\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"row\">\r\n");
      out.write("\t    <div class=\"col-lg-12\">\r\n");
      out.write("\t        <div class=\"input-group\" style=\"margin-bottom:5px;\">\r\n");
      out.write("\t            <input type=\"text\" placeholder=\"请输入账号名称\" class=\"input-sm form-control\" id=\"txtKeyword\" style=\"width:250px;height:34px;\" value=\"\"/>\r\n");
      out.write("\t            <button type=\"button\" class=\"btn btn-w-m btn-primary\" id=btnSearch style=\"margin-left:3px;\">查询</button>\r\n");
      out.write("\t            <button type=\"button\" class=\"btn btn-w-m btn-primary\" style=\"margin-left:3px;\" data-toggle=\"modal\" data-target=\"#myModal\" id=\"addUser\">添加用户</button>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write(" \r\n");
      out.write("<div id=\"content\">\r\n");
      out.write("\t\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"modal inmodal fade\" id=\"authModal\" tabindex=\"-1\" role=\"dialog\"\r\n");
      out.write("\taria-hidden=\"true\">\r\n");
      out.write("\t<div class=\"modal-dialog modal-sm\">\r\n");
      out.write("\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n");
      out.write("\t\t\t\t\t<span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span>\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t<h4 class=\"modal-title\">分配权限</h4>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"modal-body\"\r\n");
      out.write("\t\t\t\tstyle=\"height: 500px; overflow: auto; margin-top: 10px; border-bottom: solid 1px #dcdcdc;\">\r\n");
      out.write("\t\t\t\t<fieldset>\r\n");
      out.write("\t\t\t\t\t<div class=\"control-group\">\r\n");
      out.write("\t\t\t\t\t\t按照角色<input type=\"radio\" id=\"roletype\" name=\"objtype\" value=\"0\">\r\n");
      out.write("\t\t\t\t\t\t单独分配<input type=\"radio\" id=\"usertype\" name=\"objtype\" value=\"1\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"control-group\" id=\"rolediv\">\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(HtmlHelper.getSelect("roleid", roleData, "roleName", "id",null,null,"全部","width:100px"));
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"control-group\" id=\"userdiv\" style=\"display: hidden;\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"controls\">\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"btn btn-success\" id=\"btnExpanAll\" type=\"button\">展开/折叠</button>\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"btn btn-success\" id=\"btn-check-all\" type=\"button\">全选/全消</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"controls\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"test treeview\" id=\"treeview11\"></div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</fieldset>\r\n");
      out.write("\t\t\t\t<div class=\"control-group\"></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t<input id=\"userid\" type=\"hidden\" name=\"userid\" /> <input\r\n");
      out.write("\t\t\t\t\tid=\"userroleid\" type=\"hidden\" name=\"userroleid\" />\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-white\" data-dismiss=\"modal\">关闭</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" id=\"saveauth\">保存</button>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"modal inmodal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\"  aria-hidden=\"true\">\r\n");
      out.write("<div class=\"modal-dialog modal-lg\">\r\n");
      out.write("    <div class=\"modal-content\">\r\n");
      out.write("\t<div class=\"modal-header\">\r\n");
      out.write("\t    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\r\n");
      out.write("\t    <h4 class=\"modal-title\">用户操作</h4>\r\n");
      out.write("\t</div>\r\n");
      out.write("<div class=\"modal-body\">\r\n");
      out.write("\r\n");
      out.write("  账号名称：<input id=\"txtUserName\"/><br/><br/>\r\n");
      out.write("登录名称：<input id=\"txtLoginName\"/><br/><br/>\r\n");
      out.write("登录密码：<input type=\"password\" id=\"txtPwd\"/><br/><br/>\r\n");
      out.write("确认密码：<input type=\"password\" id=\"txtConfirmPwd\"/><br/><br/>\r\n");
      out.write("<br/>\r\n");
      out.write("是否启用：<input type=\"radio\" value=\"1\" name=\"radstatus\" id=\"radyes\" checked/>\r\n");
      out.write("\t  <label for=\"radyes\">启用</label>\r\n");
      out.write("\t  <input type=\"radio\" value=\"0\" name=\"radstatus\" id=\"radno\"/>\r\n");
      out.write("\t  <label for=\"radno\">不启用</label>\r\n");
      out.write("</div>\r\n");
      out.write("\t<div class=\"modal-footer\">\r\n");
      out.write("\t    <button type=\"button\" class=\"btn btn-white\" data-dismiss=\"modal\">关闭</button>\r\n");
      out.write("\t    <button type=\"button\" id=\"saveuser\" class=\"btn btn-primary\">保存</button>\r\n");
      out.write("\t</div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("var jss={\r\n");
      out.write("\t\tsearch:function(currentPage){\r\n");
      out.write("\t\t\tvar keyword=$(\"#txtKeyword\").val();\r\n");
      out.write("\t\t\t$.post(\"");
      out.print(basePath);
      out.write("/account/listdo\",{currentPage:currentPage,Keyword:keyword,m:Math.random()},function(d){\r\n");
      out.write("\t\t\t\t$(\"#content\").html(d);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\treset:function(){\r\n");
      out.write("\t\t\t$(\"#txtUserName\").val(\"\");\r\n");
      out.write("\t\t\t$(\"#txtLoginName\").val(\"\");\r\n");
      out.write("\t\t\t$(\"#txtPwd\").val(\"\");\r\n");
      out.write("\t\t\t$(\"#txtConfirmPwd\").val(\"\");\r\n");
      out.write("\t\t    $(\"#radyes\").attr(\"checked\",\"checked\");\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\treloadInfo:function(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("jss.search(1);\r\n");
      out.write("$(\"#btnSearch\").click(function(){\r\n");
      out.write("\tjss.search(1);\r\n");
      out.write("});\r\n");
      out.write("function updateuser(){\r\n");
      out.write("\tif($(\"#txtUserName\").val()==\"\"){\r\n");
      out.write("\t\talert(\"用户名不能为空\");\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tif($(\"#txtLoginName\").val()==\"\"){\r\n");
      out.write("\t\talert(\"登录名不能为空\");\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tif($(\"#txtPwd\").val()!=$(\"#txtConfirmPwd\").val()){\r\n");
      out.write("\t\talert(\"密码和确认密码不一致\");\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tvar paramaters = {\r\n");
      out.write("\t\t\t\"id\":userid,\r\n");
      out.write("\t\t\t\"userName\" :  $(\"#txtUserName\").val(),\r\n");
      out.write("\t\t\t\"loginName\" : $(\"#txtLoginName\").val(),\r\n");
      out.write("\t\t\t\"passWord\":$(\"#txtPwd\").val(),\r\n");
      out.write("\t\t\t\"status\":$('input[name=\"radstatus\"]:checked').val()\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\tvar url = \"");
      out.print(basePath);
      out.write("/account/updateuser\";\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype : 'POST',\r\n");
      out.write("\t\t\turl : url,\r\n");
      out.write("\t\t\tdata : paramaters,\r\n");
      out.write("\t\t\tsuccess : function(result) {\r\n");
      out.write("\t\t\t\tif (result>0) {\r\n");
      out.write("\t\t\t\t\talert(\"操作成功\");\r\n");
      out.write("\t\t\t\t\twindow.location.href = window.location.href;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\talert(\"操作失败\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("}\r\n");
      out.write("var userid=-1;\r\n");
      out.write("var optype=0;\r\n");
      out.write("$(\"#saveuser\").click(function(){\r\n");
      out.write("\tif(optype==1&&userid>0){\r\n");
      out.write("\t\treturn updateuser();\r\n");
      out.write("\t}\r\n");
      out.write("\tuserid=-1;\r\n");
      out.write("\toptype=0;\r\n");
      out.write("\tif($(\"#txtUserName\").val()==\"\"){\r\n");
      out.write("\t\talert(\"用户名不能为空\");\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tif($(\"#txtLoginName\").val()==\"\"){\r\n");
      out.write("\t\talert(\"登录名不能为空\");\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tif($(\"#txtPwd\").val()==\"\"){\r\n");
      out.write("\t\talert(\"密码不能为空\");\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tif($(\"#txtPwd\").val()!=$(\"#txtConfirmPwd\").val()){\r\n");
      out.write("\t\talert(\"密码和确认密码不一致\");\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tvar paramaters = {\r\n");
      out.write("\t\t\t\"userName\" :  $(\"#txtUserName\").val(),\r\n");
      out.write("\t\t\t\"loginName\" : $(\"#txtLoginName\").val(),\r\n");
      out.write("\t\t\t\"passWord\":$(\"#txtPwd\").val(),\r\n");
      out.write("\t\t\t\"status\":$('input[name=\"radstatus\"]:checked').val()\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\tvar url = \"");
      out.print(basePath);
      out.write("/account/adduser\";\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype : 'POST',\r\n");
      out.write("\t\t\turl : url,\r\n");
      out.write("\t\t\tdata : paramaters,\r\n");
      out.write("\t\t\tsuccess : function(result) {\r\n");
      out.write("\t\t\t\tif (result>0) {\r\n");
      out.write("\t\t\t\t\talert(\"操作成功\");\r\n");
      out.write("\t\t\t\t\twindow.location.href = window.location.href;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\talert(\"操作失败\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("});\r\n");
      out.write("$(\"#addUser\").click(function(){\r\n");
      out.write("\tjss.reset();\r\n");
      out.write("});\r\n");
      out.write("var oldAuth=\"\";\r\n");
      out.write("var checkstatus=0;\r\n");
      out.write("var expandstatus=0;\r\n");
      out.write("var $checkableTree;\r\n");
      out.write("//全选全消\r\n");
      out.write("$('#btn-check-all').on('click', function (e) {\r\n");
      out.write("      if(checkstatus==0){\r\n");
      out.write("    \t  checkstatus=1;\r\n");
      out.write("        $checkableTree.treeview('checkAll', { silent: true });\r\n");
      out.write("      }else{\r\n");
      out.write("    \t  checkstatus=0;\r\n");
      out.write("    \t  $checkableTree.treeview('uncheckAll', { silent: true }); \r\n");
      out.write("      }\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("// 展开/折叠\r\n");
      out.write("$('#btnExpanAll').on('click', function (e) {\r\n");
      out.write("\tif(expandstatus==0){\r\n");
      out.write("\t\texpandstatus=1;\r\n");
      out.write("\t\t $checkableTree.treeview('expandAll', { levels: 10, silent: true });\r\n");
      out.write("      }else{\r\n");
      out.write("    \t  expandstatus=0;\r\n");
      out.write("    \t  $checkableTree.treeview('collapseAll', { silent: true });\r\n");
      out.write("      }\r\n");
      out.write("  \r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("$(\"input[type='radio'][name='objtype']\").change(function() { \r\n");
      out.write("\tvar typeid=$(\"input[name='objtype']:checked\").val();\r\n");
      out.write("\tif(typeid==\"0\"){\r\n");
      out.write("  \t\t$(\"#userdiv\").hide();\r\n");
      out.write("          $(\"#rolediv\").show();\r\n");
      out.write("      }else{\r\n");
      out.write("    \t\t$(\"#userdiv\").show();\r\n");
      out.write("            $(\"#rolediv\").hide();\r\n");
      out.write("      }\r\n");
      out.write("}); \r\n");
      out.write("\r\n");
      out.write("//保存权限设置\r\n");
      out.write("$(\"#saveauth\").click(function() {\r\n");
      out.write("\tvar typeid=$(\"input[name='objtype']:checked\").val();\r\n");
      out.write("\t if(typeid==\"0\"){\r\n");
      out.write("\t\t if($(\"#userroleid\").val()==$(\"#roleid\").val()){\r\n");
      out.write("\t\t\t alert(\"没有变更，不需要保存\");\r\n");
      out.write("\t\t\t return;\r\n");
      out.write("\t\t }\r\n");
      out.write("\t\t //原来用户没有角色，则此时需要删掉原来的权限\r\n");
      out.write("\t\t var needUpdateAuth=true;\r\n");
      out.write("\t\tif(parseInt($(\"#userroleid\").val())>0){\r\n");
      out.write("\t\t\tneedUpdateAuth=false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tupdateRole($(\"#roleid\").val(),needUpdateAuth);\r\n");
      out.write("\t }\r\n");
      out.write("\t else{\r\n");
      out.write("\t\t\tvar newAuth = \"\";\r\n");
      out.write("\t        var newChecked=$checkableTree.treeview('getChecked');\r\n");
      out.write("\t\t\tif(newChecked!=undefined&&newChecked.length>0){\r\n");
      out.write("\t\t\t\t for (var i = 0; i < newChecked.length; i++){\r\n");
      out.write("\t\t\t\t\t newAuth += (newChecked[i].id+ \",\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t newAuth=newAuth.substring(0,newAuth.length-1);\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t\tif(newAuth==oldAuth){\r\n");
      out.write("\t\t\t\talert(\"没有任何修改，不需要保存\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (!confirm(\"确定要提交保存吗？\")){\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t var needUpdateRole=false;\r\n");
      out.write("\t\t\t//如果当前用户以前有自己的角色，现在要单独配置权限，则应该将原来的角色置为0\r\n");
      out.write("\t\t\tif(parseInt($(\"#userroleid\").val())>0){\r\n");
      out.write("\t\t\t\tneedUpdateRole=true;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tupdateAuth(newAuth,oldAuth,needUpdateRole);\r\n");
      out.write("\t }\r\n");
      out.write("});\r\n");
      out.write("function updateRole(roleid,updateauth){\r\n");
      out.write("  var paramaters = {\r\n");
      out.write("\t\t\t\"userID\" :  $(\"#userid\").val(),\r\n");
      out.write("\t\t\t\"newRoleID\" : roleid\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\tvar url = \"");
      out.print(basePath);
      out.write("/authmanage/updateroleid\";\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype : 'POST',\r\n");
      out.write("\t\t\turl : url,\r\n");
      out.write("\t\t\tdata : paramaters,\r\n");
      out.write("\t\t\tsuccess : function(result) {\r\n");
      out.write("\t\t\t\tif (result>0) {\r\n");
      out.write("\t\t\t\t\tif(updateauth){\r\n");
      out.write("\t\t\t\t\t\t//用户原来是单独配置的角色，现在改为了按照角色配置，则应该将原来的权限删掉\r\n");
      out.write("\t\t\t\t\t\tupdateAuth(\"\",oldAuth);\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\talert(\"操作成功\");\r\n");
      out.write("\t\t\t\t\t\twindow.location.href = window.location.href;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\talert(\"操作失败\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("}\r\n");
      out.write("function updateAuth(newauths,oldauths,updaterole){\r\n");
      out.write("  var paramaters = {\r\n");
      out.write("\t\t\t\"userID\" :  $(\"#userid\").val(),\r\n");
      out.write("\t\t\t\"newAuth\" : newauths,\r\n");
      out.write("\t\t\t\"oldAuth\" : oldauths,\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\tvar url = \"");
      out.print(basePath);
      out.write("/authmanage/saveauth\";\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype : 'POST',\r\n");
      out.write("\t\t\turl : url,\r\n");
      out.write("\t\t\tdata : paramaters,\r\n");
      out.write("\t\t\tsuccess : function(result) {\r\n");
      out.write("\t\t\t\tif (result == \"\") {\r\n");
      out.write("\t\t\t\t\tif(updaterole){\r\n");
      out.write("\t\t\t\t\t\tupdateRole(0,false);\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\talert(\"操作成功\");\r\n");
      out.write("\t\t\t\t\t\twindow.location.href = window.location.href;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\talert(result);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("}\r\n");
      out.write("//分配权限\r\n");
      out.write("function setauth(id) {\r\n");
      out.write("\tvar paramaters = { \"userID\": id};\r\n");
      out.write("  var url = \"");
      out.print(basePath);
      out.write("/authmanage/getroleid\";\r\n");
      out.write("  $.ajax({\r\n");
      out.write("      type: 'POST',\r\n");
      out.write("      url: url,\r\n");
      out.write("      data: paramaters,\r\n");
      out.write("      success: function (result) {\r\n");
      out.write("      \tif (result>0) {//当前用户已经有所属角色\r\n");
      out.write("      \t\t$(\"#usertype\").prop('checked',false); \r\n");
      out.write("      \t\t$(\"#userdiv\").hide();\r\n");
      out.write("       \t\t$(\"#roletype\").prop('checked',true); \r\n");
      out.write("            $(\"#rolediv\").show();\r\n");
      out.write("            $(\"#roleid\").val(result);\r\n");
      out.write("          }else{\r\n");
      out.write("          \t$(\"#roletype\").prop('checked',false); \r\n");
      out.write("      \t\t$(\"#rolediv\").hide();\r\n");
      out.write("            $(\"#usertype\").prop('checked',true); \r\n");
      out.write("            $(\"#userdiv\").show();\r\n");
      out.write("          }\r\n");
      out.write("        $(\"#userroleid\").val(result);\r\n");
      out.write("        createAuthTree(id);\r\n");
      out.write("\t\t$(\"#userid\").val(id+\"\");\r\n");
      out.write("\t\t$('#authModal').modal('show');\r\n");
      out.write("      }\r\n");
      out.write("  });\r\n");
      out.write("}\r\n");
      out.write("function createAuthTree(id) {\r\n");
      out.write("\tvar paramaters = { \"userID\": id};\r\n");
      out.write("  var url = \"");
      out.print(basePath);
      out.write("/authmanage/authlist\";\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\ttype : 'POST',\r\n");
      out.write("\t\turl : url,\r\n");
      out.write("\t\tdata : paramaters,\r\n");
      out.write("\t\tsuccess : function(result) {\r\n");
      out.write("\t\t\tif (result != \"\") {\r\n");
      out.write("\t\t\t\t//var obj = $.parseJSON(result); \r\n");
      out.write("\t\t\t\t$checkableTree = $('#treeview11').treeview({\r\n");
      out.write("\t\t\t\t\tdata : result,\r\n");
      out.write("\t\t\t\t\tlevels : 1,\r\n");
      out.write("\t\t\t\t\tshowIcon : false,\r\n");
      out.write("\t\t\t\t\tshowCheckbox : true,\r\n");
      out.write("\t\t\t\t\tonNodeChecked : function(event, node) {\r\n");
      out.write("\t\t\t\t\t\tcheckNode(0, event, node);\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tonNodeUnchecked : function(event, node) {\r\n");
      out.write("\t\t\t\t\t\tcheckNode(1, event, node);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tvar oldChecked = $checkableTree.treeview('getChecked');\r\n");
      out.write("\t\t\t\tif (oldChecked != undefined && oldChecked.length > 0) {\r\n");
      out.write("\t\t\t\t\tfor (var i = 0; i < oldChecked.length; i++) {\r\n");
      out.write("\t\t\t\t\t\toldAuth += (oldChecked[i].id + \",\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\toldAuth = oldAuth.substring(0, oldAuth.length - 1);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("function checkNode(type, event, node) {\r\n");
      out.write("\tvar parent = $checkableTree.treeview('getParent', node);\r\n");
      out.write("\tif (type == 0) {//选中一个节点时，所有父节点选中，选中所有子节点选中\r\n");
      out.write("\t\tcheckChild(node);\r\n");
      out.write("\t\twhile (parent != undefined && parent.nodes != undefined\r\n");
      out.write("\t\t\t\t&& parent.nodes.length > 0) {\r\n");
      out.write("\t\t\t$checkableTree.treeview('checkNode', [ parent.nodeId, {silent : true} ]);\r\n");
      out.write("\t\t\tparent = $checkableTree.treeview('getParent', parent);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t} else {\r\n");
      out.write("\t\tuncheckChild(node);\r\n");
      out.write("\t\t//取消时，如果当前节点的兄弟节点都已经被取消选中了，则当前节点的父节点也应该取消选中\r\n");
      out.write("\t\tif (node.isbutton==\"0\" &&\r\n");
      out.write("\t\t\tparent != undefined && \r\n");
      out.write("\t\t\tparent.nodes != undefined&& \r\n");
      out.write("\t\t\tparent.state.checked) {\r\n");
      out.write("\t\t\tvar siblingNodes = $checkableTree.treeview('getSiblings', node);\r\n");
      out.write("\t\t\tvar needUncheckParent = true;\r\n");
      out.write("\t\t\tif (siblingNodes.length > 0) {\r\n");
      out.write("\t\t\t\tfor (var i = 0; i < siblingNodes.length; i++) {\r\n");
      out.write("\t\t\t\t\tif (siblingNodes[i].state.checked) {\r\n");
      out.write("\t\t\t\t\t\tneedUncheckParent = false;\r\n");
      out.write("\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (needUncheckParent) {\r\n");
      out.write("\t\t\t\t$checkableTree.treeview('uncheckNode', [ parent.nodeId, {silent : false} ]);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("//选中当前节点的所有子节点和孙子节点\r\n");
      out.write("function checkChild(node) {\r\n");
      out.write("\tif (node.nodes != undefined && node.nodes.length > 0) {\r\n");
      out.write("\t\tvar childs = $checkableTree.treeview('findNodes', ['^' + node.id + '$', 'g', 'parentid' ]);\r\n");
      out.write("\t\tif (childs != undefined && childs.length > 0) {\r\n");
      out.write("\t\t\t$checkableTree.treeview('checkNode', [ childs, {silent : true} ]);\r\n");
      out.write("\t\t\tfor (var i = 0; i < node.nodes.length; i++) {\r\n");
      out.write("\t\t\t\tcheckChild(node.nodes[i]);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("//取消选中当前节点的所有子节点和孙子节点\r\n");
      out.write("function uncheckChild(node) {\r\n");
      out.write("\tif (node.nodes != undefined && node.nodes.length > 0) {\r\n");
      out.write("\t\tvar childs = $checkableTree.treeview('findNodes', ['^' + node.id + '$', 'g', 'parentid' ]);\r\n");
      out.write("\t\tif (childs != undefined && childs.length > 0) {\r\n");
      out.write("\t\t\t$checkableTree.treeview('uncheckNode', [ childs, {silent : true} ]);\r\n");
      out.write("\t\t\tfor (var i = 0; i < node.nodes.length; i++) {\r\n");
      out.write("\t\t\t\tuncheckChild(node.nodes[i]);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
