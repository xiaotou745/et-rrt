/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.24
 * Generated at: 2015-09-29 05:08:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.role;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.renrentui.renrencore.util.PropertyUtils;
import java.util.List;
import com.renrentui.renrenentity.MenuInfo;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.renrentui.renrenentity.MenuInfo");
    _jspx_imports_classes.add("com.renrentui.renrencore.util.PropertyUtils");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String basePath = PropertyUtils.getProperty("java.renrenadmin.url");

      out.write("\r\n");
      out.write("<script src=\"");
      out.print(basePath);
      out.write("/js/bootstrap-treeview.js\"></script>\r\n");
      out.write("<div class=\"wrapper wrapper-content animated fadeInRight\">\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"row\">\r\n");
      out.write("\t\t<div class=\"col-lg-12\">\r\n");
      out.write("\t\t\t<div class=\"input-group\" style=\"margin-bottom: 5px;\">\r\n");
      out.write("\t\t\t\t<input type=\"text\" placeholder=\"新增的角色名称\"\r\n");
      out.write("\t\t\t\t\tclass=\"input-sm form-control\" id=\"newRole\"\r\n");
      out.write("\t\t\t\t\tstyle=\"width: 250px; height: 34px;\" value=\"\" />\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-w-m btn-primary\" id=\"add\"\r\n");
      out.write("\t\t\t\t\tstyle=\"margin-left: 3px;\">新增角色</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div id=\"content\"></div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"modal inmodal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\"\r\n");
      out.write("\taria-hidden=\"true\">\r\n");
      out.write("\t<div class=\"modal-dialog modal-sm\">\r\n");
      out.write("\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n");
      out.write("\t\t\t\t\t<span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span>\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t<h4 class=\"modal-title\">分配权限</h4>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"modal-body\"\r\n");
      out.write("\t\t\t\tstyle=\"height: 500px; overflow: auto; margin-top: 10px; border-bottom: solid 1px #dcdcdc;\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<fieldset>\r\n");
      out.write("\t\t\t\t\t<div class=\"control-group\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"controls\">\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"btn btn-success\" id=\"btnExpanAll\" type=\"button\">展开/折叠</button>\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"btn btn-success\" id=\"btn-check-all\" type=\"button\">全选/全消</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"controls\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"test treeview\" id=\"treeview11\"></div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</fieldset>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t<input id=\"roleid\" type=\"hidden\" name=\"roleid\" />\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-white\" data-dismiss=\"modal\">关闭</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" id=\"saveauth\">保存</button>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"modal inmodal fade\" id=\"modifyModal\" tabindex=\"-1\" role=\"dialog\"  aria-hidden=\"true\">\r\n");
      out.write("<div class=\"modal-dialog modal-sm\">\r\n");
      out.write("    <div class=\"modal-content\">\r\n");
      out.write("\t<div class=\"modal-header\">\r\n");
      out.write("\t    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\r\n");
      out.write("\t    <h4 class=\"modal-title\">修改角色</h4>\r\n");
      out.write("\t</div>\r\n");
      out.write("<div class=\"modal-body\">\r\n");
      out.write("  角色名称：<input id=\"roleName\"/><br/><br/>\r\n");
      out.write("是否启用：<input type=\"radio\" value=\"0\" name=\"radstatus\" id=\"radyes\"/>\r\n");
      out.write("\t  <label for=\"radyes\">启用</label>\r\n");
      out.write("\t  <input type=\"radio\" value=\"1\" name=\"radstatus\" id=\"radno\"/>\r\n");
      out.write("\t  <label for=\"radno\">不启用</label>\r\n");
      out.write("</div>\r\n");
      out.write("\t<div class=\"modal-footer\">\r\n");
      out.write("\t    <button type=\"button\" class=\"btn btn-white\" data-dismiss=\"modal\">关闭</button>\r\n");
      out.write("\t    <button type=\"button\" class=\"btn btn-primary\" id=\"saverole\">保存</button>\r\n");
      out.write("\t</div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("\tvar data=null;\r\n");
      out.write("\t$.post(\"");
      out.print(basePath);
      out.write("/role/listdo\", data, function(d) {\r\n");
      out.write("\t\t$(\"#content\").html(d);\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\t$(\"#add\").click(function() {\r\n");
      out.write("\t\tif($(\"#newRole\").val()==\"\"){\r\n");
      out.write("\t\t\talert(\"角色名称不能为空\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar paramaters = {\r\n");
      out.write("\t\t\t\t\"roleName\" :  $(\"#newRole\").val()\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\tvar url = \"");
      out.print(basePath);
      out.write("/role/add\";\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype : 'POST',\r\n");
      out.write("\t\t\t\turl : url,\r\n");
      out.write("\t\t\t\tdata : paramaters,\r\n");
      out.write("\t\t\t\tsuccess : function(result) {\r\n");
      out.write("\t\t\t\t\tif (result>0) {\r\n");
      out.write("\t\t\t\t\t\talert(\"操作成功\");\r\n");
      out.write("\t\t\t\t\t\twindow.location.href = window.location.href;\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\talert(\"操作失败\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\t\t\r\n");
      out.write("\t});\r\n");
      out.write("    var oldAuth=\"\";\r\n");
      out.write("\tvar checkstatus=0;\r\n");
      out.write("\tvar expandstatus=0;\r\n");
      out.write("\tvar $checkableTree;\r\n");
      out.write("\t//全选全消\r\n");
      out.write("    $('#btn-check-all').on('click', function (e) {\r\n");
      out.write("\t      if(checkstatus==0){\r\n");
      out.write("\t    \t  checkstatus=1;\r\n");
      out.write("\t        $checkableTree.treeview('checkAll', { silent: true });\r\n");
      out.write("\t      }else{\r\n");
      out.write("\t    \t  checkstatus=0;\r\n");
      out.write("\t    \t  $checkableTree.treeview('uncheckAll', { silent: true }); \r\n");
      out.write("\t      }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // 展开/折叠\r\n");
      out.write("    $('#btnExpanAll').on('click', function (e) {\r\n");
      out.write("    \tif(expandstatus==0){\r\n");
      out.write("    \t\texpandstatus=1;\r\n");
      out.write("    \t\t $checkableTree.treeview('expandAll', { levels: 10, silent: true });\r\n");
      out.write("\t      }else{\r\n");
      out.write("\t    \t  expandstatus=0;\r\n");
      out.write("\t    \t  $checkableTree.treeview('collapseAll', { silent: true });\r\n");
      out.write("\t      }\r\n");
      out.write("      \r\n");
      out.write("    });\r\n");
      out.write("  //保存权限设置\r\n");
      out.write("\t$(\"#saveauth\").click(function() {\r\n");
      out.write("\t\tvar newAuth = \"\";\r\n");
      out.write("        var newChecked=$checkableTree.treeview('getChecked');\r\n");
      out.write("\t\tif(newChecked!=undefined&&newChecked.length>0){\r\n");
      out.write("\t\t\t for (var i = 0; i < newChecked.length; i++){\r\n");
      out.write("\t\t\t\t newAuth += (newChecked[i].id+ \",\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t newAuth=newAuth.substring(0,newAuth.length-1);\r\n");
      out.write("\t\t }\r\n");
      out.write("\t\tif(newAuth==oldAuth){\r\n");
      out.write("\t\t\talert(\"没有任何修改，不需要保存\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (!confirm(\"确定要提交保存吗？\")){\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar paramaters = {\r\n");
      out.write("\t\t\t\"roleID\" :  $(\"#roleid\").val(),\r\n");
      out.write("\t\t\t\"newAuth\" : newAuth,\r\n");
      out.write("\t\t\t\"oldAuth\" : oldAuth,\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\tvar url = \"");
      out.print(basePath);
      out.write("/role/saveauth\";\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype : 'POST',\r\n");
      out.write("\t\t\turl : url,\r\n");
      out.write("\t\t\tdata : paramaters,\r\n");
      out.write("\t\t\tsuccess : function(result) {\r\n");
      out.write("\t\t\t\tif (result == \"\") {\r\n");
      out.write("\t\t\t\t\talert(\"操作成功\");\r\n");
      out.write("\t\t\t\t\twindow.location.href = window.location.href;\r\n");
      out.write("\t\t\t\t\t//$('#myModal').modal('hidden');\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\talert(result);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\t//分配权限\r\n");
      out.write("    function setauth(id) {\r\n");
      out.write("    \tvar paramaters = { \"roleID\": id};\r\n");
      out.write("        var url = \"");
      out.print(basePath);
      out.write("/role/authlist\";\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: 'POST',\r\n");
      out.write("            url: url,\r\n");
      out.write("            data: paramaters,\r\n");
      out.write("            success: function (result) {\r\n");
      out.write("            \tif (result!=\"\") {\r\n");
      out.write("                     //var obj = $.parseJSON(result); \r\n");
      out.write("            \t\t $checkableTree=$('#treeview11').treeview({\r\n");
      out.write("            \t        data: result,\r\n");
      out.write("            \t        levels: 1,\r\n");
      out.write("            \t        showIcon: false,\r\n");
      out.write("            \t        showCheckbox: true,\r\n");
      out.write("            \t        onNodeChecked: function(event, node) {\r\n");
      out.write("            \t        \tcheckNode(0,event, node);\r\n");
      out.write("            \t        },\r\n");
      out.write("            \t        onNodeUnchecked: function (event, node) {\r\n");
      out.write("            \t        \tcheckNode(1,event, node);\r\n");
      out.write("            \t        }\r\n");
      out.write("            \t      });\r\n");
      out.write("            \t\t var oldChecked=$checkableTree.treeview('getChecked');\r\n");
      out.write("            \t\t if(oldChecked!=undefined&&oldChecked.length>0){\r\n");
      out.write("            \t\t\t for (var i = 0; i < oldChecked.length; i++){\r\n");
      out.write("            \t\t\t\t oldAuth+=(oldChecked[i].id+\",\");\r\n");
      out.write("            \t\t\t}\r\n");
      out.write("            \t\t\t oldAuth=oldAuth.substring(0,oldAuth.length-1);\r\n");
      out.write("            \t\t }\r\n");
      out.write("            \t\t $(\"#roleid\").val(id);\r\n");
      out.write("                    $('#myModal').modal('show');\r\n");
      out.write("                } \r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\tfunction checkNode(type,event, node){\r\n");
      out.write("\t\tvar parent=$checkableTree.treeview('getParent', node);\r\n");
      out.write("\t\tif(type==0){//选中一个节点时，所有父节点选中，选中所有子节点选中\r\n");
      out.write("\t\t\tcheckChild(node);\r\n");
      out.write("\t\t\twhile(parent!=undefined&&parent.nodes!=undefined&&parent.nodes.length>0){\r\n");
      out.write("\t\t\t\t$checkableTree.treeview('checkNode', [ parent.nodeId, { silent: true } ]);\r\n");
      out.write("\t\t\t\tparent=$checkableTree.treeview('getParent', parent);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tuncheckChild(node);\r\n");
      out.write("\t\t\t//取消时，如果当前节点的兄弟节点都已经被取消选中了，则当前节点的父节点也应该取消选中\r\n");
      out.write("\t\t\tif(node.isbutton==\"0\" &&\r\n");
      out.write("\t\t\t\tparent!=undefined &&\r\n");
      out.write("\t\t\t\tparent.nodes!=undefined &&\r\n");
      out.write("\t\t\t\tparent.state.checked){\r\n");
      out.write("\t\t\t\tvar siblingNodes=$checkableTree.treeview('getSiblings', node);\r\n");
      out.write("\t\t\t\tvar needUncheckParent=true;\r\n");
      out.write("\t\t\t\tif(siblingNodes.length>0){\r\n");
      out.write("\t\t\t\t\tfor (var i = 0; i < siblingNodes.length; i++){\r\n");
      out.write("\t\t\t\t\t\tif(siblingNodes[i].state.checked){\r\n");
      out.write("\t\t\t\t\t\t\tneedUncheckParent=false;\r\n");
      out.write("\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(needUncheckParent){\r\n");
      out.write("\t\t\t\t\t$checkableTree.treeview('uncheckNode', [ parent.nodeId, { silent: false } ]);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t//选中当前节点的所有子节点和孙子节点\r\n");
      out.write("\tfunction checkChild(node){\r\n");
      out.write("\t\tif(node.nodes!=undefined&&node.nodes.length>0){\r\n");
      out.write("\t          var childs = $checkableTree.treeview('findNodes', ['^'+node.id+'$','g','parentid']);\r\n");
      out.write("\t          if(childs!=undefined&&childs.length>0){\r\n");
      out.write("\t        \t  $checkableTree.treeview('checkNode', [ childs, { silent: true } ]);\r\n");
      out.write("\t   \t\t\tfor (var i = 0; i < node.nodes.length; i++){\r\n");
      out.write("\t \t\t\t\t checkChild(node.nodes[i]);\r\n");
      out.write("\t \t\t\t}\r\n");
      out.write("\t          }\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t//取消选中当前节点的所有子节点和孙子节点\r\n");
      out.write("\tfunction uncheckChild(node){\r\n");
      out.write("\t\tif(node.nodes!=undefined&&node.nodes.length>0){\r\n");
      out.write("\t\t\t var childs = $checkableTree.treeview('findNodes', ['^'+node.id+'$','g','parentid']);\r\n");
      out.write("\t         if(childs!=undefined&&childs.length>0){\r\n");
      out.write("\t\t        \t$checkableTree.treeview('uncheckNode', [ childs, { silent: true } ]);\r\n");
      out.write("\t\t\t\t\tfor (var i = 0; i < node.nodes.length; i++){\r\n");
      out.write("\t\t\t\t\t\t uncheckChild(node.nodes[i]);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t  }\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tvar oldRole=\"\";\r\n");
      out.write("\t$(\"#saverole\").click(function(){\r\n");
      out.write("\t\tvar belock=$(\"input[name='radstatus']:checked\").val();\r\n");
      out.write("\t\tvar newRole=$(\"#roleid\").val()+\";\"+belock+\";\"+$('#roleName').val();\r\n");
      out.write("\t\tif(oldRole==newRole){\r\n");
      out.write("\t\t\talert(\"没有修改，不需要保存\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tvar paramaters = {\r\n");
      out.write("\t\t\t\t\"roleID\" :  $(\"#roleid\").val(),\r\n");
      out.write("\t\t\t\t\"belock\" : belock,\r\n");
      out.write("\t\t\t\t\"newName\" : $('#roleName').val(),\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\tvar url = \"");
      out.print(basePath);
      out.write("/role/saverole\";\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype : 'POST',\r\n");
      out.write("\t\t\t\turl : url,\r\n");
      out.write("\t\t\t\tdata : paramaters,\r\n");
      out.write("\t\t\t\tsuccess : function(result) {\r\n");
      out.write("\t\t\t\t\tif (result>0) {\r\n");
      out.write("\t\t\t\t\t\talert(\"操作成功\");\r\n");
      out.write("\t\t\t\t\t\twindow.location.href = window.location.href;\r\n");
      out.write("\t\t\t\t\t\t//$('#myModal').modal('hidden');\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\talert(\"操作失败\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("    function modify(id,belock,rolename) {\r\n");
      out.write("    \toldRole=id+\";\"+belock+\";\"+rolename;\r\n");
      out.write("\t\tif(belock==0){\r\n");
      out.write("\t\t\t$(\"#radyes\").prop('checked',true); \r\n");
      out.write("\t\t\t$(\"#radno\").prop('checked',false); \r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$(\"#radyes\").prop('checked',false); \r\n");
      out.write("\t\t\t$(\"#radno\").prop('checked',true); \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$(\"#roleid\").val(id);\r\n");
      out.write("    \t$('#roleName').val(rolename);\r\n");
      out.write("        $('#modifyModal').modal('show');\r\n");
      out.write("    }\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
