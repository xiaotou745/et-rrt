/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.24
 * Generated at: 2015-09-29 05:08:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.authmanage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import com.renrentui.renrencore.util.PropertyUtils;
import com.renrentui.renrencore.util.ParseHelper;
import com.renrentui.renrenentity.MenuInfo;
import com.renrentui.renrencore.util.EnumHelper;
import com.renrentui.renrencore.util.HtmlHelper;

public final class menulist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.renrentui.renrenentity.MenuInfo");
    _jspx_imports_classes.add("com.renrentui.renrencore.util.PropertyUtils");
    _jspx_imports_classes.add("com.renrentui.renrencore.util.HtmlHelper");
    _jspx_imports_classes.add("com.renrentui.renrencore.util.ParseHelper");
    _jspx_imports_classes.add("com.renrentui.renrencore.util.EnumHelper");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String basePath = PropertyUtils.getProperty("java.renrenadmin.url");
	List<MenuInfo> data = (List<MenuInfo>) request.getAttribute("listData");
	MenuInfo currentMenu = (MenuInfo) request.getAttribute("currentMenu");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"SearchMd\">\r\n");
      out.write("\t<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>");
      out.print(currentMenu==null?"一级菜单":currentMenu.getMenuName());
      out.write("</td>\r\n");
      out.write("\t\t\t<td><input type=\"button\" value=\"新增菜单\" onclick=\"addNewMenu()\" /></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"wrapper wrapper-content animated fadeInRight\">\r\n");
      out.write("\t<div class=\"row\">\r\n");
      out.write("\t\t<div class=\"col-lg-12\">\r\n");
      out.write("\t\t\t<div class=\"ibox-content\" id=\"content\">\r\n");
      out.write("\t\t\t\t<table\r\n");
      out.write("\t\t\t\t\tclass=\"table table-striped table-bordered table-hover dataTables-example\">\r\n");
      out.write("\t\t\t\t\t");

						if(currentMenu==null){//如果是一级菜单
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>编号</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>菜单名称</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>操作</th>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t");

							for (int i = 0; i < data.size(); i++) {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<tr class=\"info\">\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(data.get(i).getId());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(ParseHelper.ShowString(data.get(i).getMenuName()));
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-sm\">修改</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-sm\">查看子菜单</button>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t");

							}
						
      out.write("\r\n");
      out.write("\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t");

						//如果是子菜单
					
      out.write("\r\n");
      out.write("\t\t\t\t\t");

						}else{
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>编号</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>菜单名称</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>旧版后台菜单地址</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>新版后台菜单地址</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>父级菜单</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>是否按钮</th>\r\n");
      out.write("\t\t\t\t\t\t\t<th>操作</th>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t");

							for (int i = 0; i < data.size(); i++) {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<tr class=\"info\">\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(data.get(i).getId());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(ParseHelper.ShowString(data.get(i).getMenuName()));
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(data.get(i).getUrl());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(data.get(i).getUrl());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(data.get(i).getParId());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(data.get(i).getIsButton());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-sm\">修改</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-sm\">添加按钮</button>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t");

							}
						
      out.write("\r\n");
      out.write("\t\t\t\t\t</tbody>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t");

						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 新增菜单 -->\r\n");
      out.write("<form method=\"POST\" action=\"#\" class=\"form-horizontal\" id=\"searchForm\">\r\n");
      out.write("<input type=\"hidden\" name=\"curId\" value=\"");
      out.print(currentMenu == null ? 0 : currentMenu.getId() );
      out.write("\" />\r\n");
      out.write("<div tabindex=\"-1\" class=\"modal inmodal\" id=\"addNewMenu\"\r\n");
      out.write("\trole=\"dialog\" aria-hidden=\"true\" style=\"display: none;\">\r\n");
      out.write("\t<div class=\"modal-dialog\">\r\n");
      out.write("\t\t<div class=\"modal-content animated bounceInRight\">\r\n");
      out.write("\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t<button class=\"close\" type=\"button\" data-dismiss=\"modal\">\r\n");
      out.write("\t\t\t\t\t<span aria-hidden=\"true\">×</span><span class=\"sr-only\">关闭</span>\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t<h4 class=\"modal-title\">新增菜单</h4>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<small class=\"font-bold\">\r\n");
      out.write("\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t<fieldset>\r\n");
      out.write("\t\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"control-group\">\r\n");
      out.write("\t\t\t\t\t\t\t<label>菜单名称：</label> <input name=\"menuName\" id=\"menuName\"\r\n");
      out.write("\t\t\t\t\t\t\t\t type=\"text\"/>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</fieldset>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t");

					if(currentMenu != null){
				
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t<fieldset>\r\n");
      out.write("\t\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"control-group\">\r\n");
      out.write("\t\t\t\t\t\t\t<label>旧版后台菜单url：</label> <input name=\"url\" id=\"url\"\r\n");
      out.write("\t\t\t\t\t\t\t\tdisabled=\"disabled\" type=\"text\"/>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</fieldset>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t<fieldset>\r\n");
      out.write("\t\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"control-group\">\r\n");
      out.write("\t\t\t\t\t\t\t<label>新版后台菜单url：</label> <input name=\"javaUrl\" id=\"javaUrl\"\r\n");
      out.write("\t\t\t\t\t\t\t\tdisabled=\"disabled\" type=\"text\"/>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</fieldset>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t<fieldset>\r\n");
      out.write("\t\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"control-group\">\r\n");
      out.write("\t\t\t\t\t\t\t<label>是否是按钮：</label> <input type=\"radio\" name=\"isButton\" value=\"1\" checked=\"checked\" />是\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"radio\" name=\"isButton\" value=\"0\" checked=\"checked\" />否\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</fieldset>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t<button class=\"btn btn-white\" type=\"button\" data-dismiss=\"modal\">关闭</button>\r\n");
      out.write("\t\t\t\t\t<button class=\"btn btn-primary\" type=\"button\"\r\n");
      out.write("\t\t\t\t\t\tid=\"btnRechargeCommit\" onclick=\"save()\">保存</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</small>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<small class=\"font-bold\"> </small>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<small class=\"font-bold\"> </small>\r\n");
      out.write("</div>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction addNewMenu(){\r\n");
      out.write("\t\t$('#addNewMenu').modal('show');\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction save(){\r\n");
      out.write("\t\tvar menuName = $(\"#menuName\").val();\r\n");
      out.write("\t\tif(menuName == ''){\r\n");
      out.write("\t\t\talert(\"请输入菜单名称!\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar data=$(\"#searchForm\").serialize();\r\n");
      out.write("\t\t$.post(\"");
      out.print(basePath);
      out.write("/authmanage/addNewMenu\",data,function(d){\r\n");
      out.write("\t\t\talert(d);\r\n");
      out.write("\t\t\tlocation.reload();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
