<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.renrentui.renrenapi.dao.inter.IRenRenTaskDao" >
  <sql id="Base_Column_List" >
    Id, TaskTitle, TaskNotice, TaskGeneralInfo, BusinessId, Pusher, CreateName, CreateTime, 
    ModifyName, ModifyTime, BeginTime, EndTime, TaskCycle, AvailableCount, Amount, status, 
    TaskTotalCount, SnapshotTemplateId, Link, PaymentMethod,AuditCycle,TaskNote,TargetPeople,CompanySummary
  </sql>
  <select id="selectById" resultType="com.renrentui.renrenentity.RenRenTask" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from RenRenTask
    where Id = #{id,jdbcType=BIGINT}
  </select>

  <insert id="insert" parameterType="com.renrentui.renrenentity.RenRenTask" >
    	  <selectKey resultType="java.lang.Long" keyProperty="id"
				order="AFTER">
				select @@IDENTITY as id
	  </selectKey>
    insert into RenRenTask (TaskTitle, TaskNotice, 
      TaskGeneralInfo, BusinessId, Pusher, 
      CreateName, CreateTime, ModifyName, 
      ModifyTime, BeginTime, EndTime, 
      TaskCycle, AvailableCount, Amount, 
      status, TaskTotalCount, SnapshotTemplateId, 
      Link, PaymentMethod,AuditCycle,TaskNote,TargetPeople,CompanySummary)
    values (#{taskTitle,jdbcType=NVARCHAR}, #{taskNotice,jdbcType=NVARCHAR}, 
      #{taskGeneralInfo,jdbcType=NVARCHAR}, #{businessId,jdbcType=BIGINT}, 
      #{pusher,jdbcType=NVARCHAR}, 
      #{createName,jdbcType=NVARCHAR}, getdate(),
       #{modifyName,jdbcType=NVARCHAR}, getdate(),
      #{beginTime,jdbcType=TIMESTAMP},
       #{endTime,jdbcType=TIMESTAMP}, 
      #{taskCycle,jdbcType=BIGINT}, #{availableCount,jdbcType=INTEGER}, 
      #{amount,jdbcType=DECIMAL}, 
      #{status,jdbcType=INTEGER}, #{taskTotalCount,jdbcType=INTEGER},
       #{snapshotTemplateId,jdbcType=BIGINT}, 
      #{link,jdbcType=NVARCHAR}, #{paymentMethod,jdbcType=SMALLINT},
      #{auditCycle,jdbcType=BIGINT}, #{taskNote,jdbcType=NVARCHAR},
      #{targetPeople,jdbcType=BIGINT}, #{companySummary,jdbcType=NVARCHAR})
  </insert>
  <!-- 获取任务详情接口  2015年9月29日13:18:05茹化肖  -->
   <select id="getTaskDetail" resultType="com.renrentui.renrenentity.domain.TaskDetail" parameterType="com.renrentui.renrenentity.req.TaskDetailReq" >
SELECT TOP 1 rrt.id ,
        TaskTitle ,
        TaskNotice ,
        rrt.Amount ,
        rrt.EndTime ,
        AvailableCount ,
        PaymentMethod ,
        TaskGeneralInfo ,
        rrt.TaskNote ,
        rrt.BusinessId ,
        rrt.SnapshotTemplateId as templateId,
        Pusher,
        ISNULL(t.TemplateName ,'') AS TemplateName,
        CASE WHEN o.ClienterId >0 THEN 1 ELSE 0 END AS IsHad,--1已经领取 0  没有领取
        ISNULL(o.id,0) AS orderId,
        b.Logo,
        o.CreateTime as ReceivedTime,
        rrt.CompanySummary,
        rrt.AuditCycle,
        rrt.TaskCycle,
        (case when rrt.EndTime>getdate() and rrt.AvailableCount>0 and rrt.Status=1 and 
			rrt.Id not in (
					 select TaskId from dbo.[Order](nolock) where ClienterId=${userId} and OrderStatus=0
                )
		 then 1 else 0 end) IsAgainPickUp,
        (SELECT COUNT(o2.id) FROM  dbo.[Order] AS o2(NOLOCK) WHERE o2.OrderStatus=1 AND o2.AuditStatus=0 AND o2.TaskId=rrt.id) as WaitCount
FROM    dbo.RenRenTask AS rrt ( NOLOCK )
LEFT JOIN dbo.Business AS b (NOLOCK) ON b.Id = rrt.BusinessId
LEFT JOIN dbo.TemplateSnapshot AS t (NOLOCK) ON t.id=rrt.SnapshotTemplateId AND t.BusinessId = rrt.BusinessId
LEFT JOIN dbo.[Order] AS o (NOLOCK) ON rrt.id=o.TaskId AND o.ClienterId=${userId} AND o.OrderStatus=0
WHERE rrt.id=${taskId} 
order by rrt.id desc
  </select>
  <!-- 验证任务是否可以领取 2015年9月29日17:13:19 茹化肖 -->
 <select id="checkTask" resultType="com.renrentui.renrenentity.domain.CheckTask" parameterType="com.renrentui.renrenentity.req.TaskDetailReq" >
SELECT TOP 1
CASE WHEN rrt.AvailableCount>0 THEN 1 ELSE 0 END AS BlanceCan,--1 任务剩余量足够领取
CASE WHEN rrt.[Status]=1 AND rrt.EndTime>GETDATE() THEN 1 ELSE 0 END AS EndTimeCan,--1 任务尚未关闭
CASE WHEN (o.clienterid IS NULL) THEN 1 ELSE 0 END AS OrderCan,--1 可以领取
CASE WHEN 3>(SELECT COUNT(1) FROM  dbo.[Order] WHERE ClienterId=${userId} AND OrderStatus=0) THEN 1 ELSE 0 END AS CountCan,--1 可以领取
TaskCycle,
rrt.Amount
FROM dbo.RenRenTask AS rrt
LEFT JOIN dbo.[Order] AS o ON rrt.id=o.TaskId AND o.ClienterId=${userId} AND o.OrderStatus=0
WHERE rrt.id=${taskId}
  </select>
  <!-- 领取任务时  将任务剩余量-1 茹化肖 2015年9月30日10:56:18 -->
  <update id="cutTaskAvailableCount" parameterType="java.util.HashMap" >
UPDATE dbo.RenRenTask SET AvailableCount=AvailableCount-1
    where Id = #{taskid,jdbcType=BIGINT}
  </update>
    <!-- 取消任务时  将任务剩余量+1 茹化肖 2015年9月30日10:56:18 -->
  <update id="addTaskAvailableCount" parameterType="java.util.HashMap" >
	UPDATE dbo.RenRenTask SET AvailableCount=AvailableCount+1
    where Id = #{taskid,jdbcType=BIGINT}
  </update>
  <sql id="getPagedRenRenTaskListWhere">

		1=1		
		<if test="taskTitle != null and taskTitle!=''">
			and a.taskTitle like ''%${taskTitle}%''
		</if>	
		<if test="pusher != null and pusher!=''">
			and a.pusher like ''%${pusher}%''
		</if>	
		<if test="businessId != null and businessId>0">
			and a.businessId=${businessId}
		</if>
		<if test="createName != null and createName!=''">
			and a.createName like ''%${createName}%''
		</if>
		<if test="createTimeBegin != null and createTimeBegin!=''">
			and a.createTime >=''${createTimeBegin}''
		</if>
		<if test="createTimeEnd != null and createTimeEnd!=''">
			and ''${createTimeEnd} 23:59:59''>a.createTime
		</if>
	    <if test="beginTime != null and beginTime!=''">
			and a.endTime>=''${beginTime}''
		</if>
		<if test="endTime != null and endTime!=''">
			and ''${endTime} 23:59:59''>=a.beginTime
		</if>
	    <if test="status != null and status>-1">
			and a.status=${status}
		</if>
	    <if test="templateId != null and templateId>-1">
			and b.templateId=${templateId}
		</if>
	    <if test="paymentMethod != null and paymentMethod>0">
			and a.paymentMethod=${paymentMethod}
		</if>
	</sql>
  
  	<select id="getPagedRenRenTaskList" resultType="com.renrentui.renrenentity.domain.RenRenTaskModel"
		parameterType="com.renrentui.renrenentity.req.PagedRenRenTaskReq"
		statementType="CALLABLE">
		{call Sp_CustomPage2015_V1(
		' a.Id DESC ',
		'a.*,b.templateName,c.CompanyName as businessName, 
        CASE when o.TaskAudi is  null and (a.status=3 or a.status=4) then 1
             else 0 end  as canSettlement 
        ',
		'RenRenTask a with ( nolock )
        join TemplateSnapshot b with ( nolock ) on a.snapshotTemplateId = b.id
        join Business c with ( nolock ) on a.businessId = c.id
        left  join ( select distinct
                            TaskId as TaskAudi
                     from   [Order] (nolock) 
                     where  (AuditStatus =0 or AuditStatus=1)
                            and OrderStatus = 1
                   ) as o on a.Id = o.TaskAudi  
        ',
		'
		<include refid="getPagedRenRenTaskListWhere" />
		',
		#{pageSize,mode=IN,jdbcType=INTEGER},
		#{currentPage,mode=IN,jdbcType=INTEGER}
		,1,
		#{totalRecord,mode=OUT,jdbcType=INTEGER},
		#{totalPage,mode=OUT,jdbcType=INTEGER}
		)}
	</select>
	  <update id="setTaskStatus" parameterType="com.renrentui.renrenentity.req.UpdateStatusReq" >
	UPDATE dbo.RenRenTask 
	<set >
      <if test="status != null" >
       status=#{status,jdbcType=BIGINT},
      </if>
      <if test="userName != null and userName!=''" >
       modifyName=#{userName,jdbcType=NVARCHAR},modifyTime=getdate(),
      </if>
      <if test="status != null and status==1" >
        pusher=#{userName,jdbcType=NVARCHAR},
      </if>
    </set>
     where Id = #{reocrdId,jdbcType=BIGINT} and status=#{oldStatus,jdbcType=BIGINT}
  </update>
<select id="getNewTaskList" resultType="com.renrentui.renrenentity.domain.TaskModel" parameterType="com.renrentui.renrenentity.req.TaskReq" >
   	select 
   	<if test="itemsCount != 0" >
   		top  ${itemsCount} 
   	</if> 
        rt.Id TaskId ,
        rt.TaskGeneralInfo ,
        rt.Pusher ,
        rt.TaskTitle TaskName ,
        rt.Amount ,
        rt.AvailableCount ,
        <if test="userId != 0" >
            case  when o.OrderStatus is null then -1 else o.OrderStatus end [Status],
            o.Id orderId,
            o.AuditStatus, 
        </if> 
        isnull(rt.BeginTime,'') BeginTime,
        isnull(rt.EndTime,'') EndTime,
        rt.PaymentMethod,
        b.logo 
from    dbo.RenRenTask rt ( nolock )
   	<if test="userId != 0" >
   		left join  dbo.[Order] o(nolock) on rt.Id  = o.TaskId and o.ClienterId =  ${userId} and o.OrderStatus=0  
   	</if> 
join dbo.Business b (nolock) on rt.BusinessId = b.Id 
where    1=1
   	<if test="userId != 0" >
   	   and   o.ClienterId is null
   	</if> 
and rt.Status = 1 and getdate()>=rt.BeginTime and rt.EndTime>getdate()  
and rt.AvailableCount>0
	  <if test="nextId != 0" >
         and rt.Id > ${nextId}
     </if>
order by rt.Id asc;
  </select>   
  
   <select id="getNewTaskListTotal" resultType="java.lang.Integer" parameterType="com.renrentui.renrenentity.req.TaskReq" >
   	select count(1) from dbo.RenRenTask rt ( nolock )
<if test="userId != 0" >
    left join  dbo.[Order] o(nolock) on rt.Id  = o.TaskId and o.ClienterId =  ${userId} and o.OrderStatus=0 
 </if>  
where  1=1
<if test="userId != 0" >
and   o.ClienterId is null 
</if>  
 and rt.Status = 1 and getdate()>=rt.BeginTime and rt.EndTime>getdate() and rt.AvailableCount>0
 	<if test="userId != 0 and nextId != 0" >
         and o.Id > ${nextId}
     </if>
  </select> 
  <!--  我的任务  已领取 -->
  <select id="getMyReceivedTaskList" resultType="com.renrentui.renrenentity.domain.TaskModel" parameterType="com.renrentui.renrenentity.req.TaskReq" >
   	select 
   	<if test="itemsCount != 0" >
   		top  ${itemsCount} 
   	</if> 
        rt.Id TaskId ,
        rt.TaskGeneralInfo ,
        rt.Pusher ,
        rt.TaskTitle TaskName ,
        rt.Amount ,
        rt.AvailableCount ,
        case  when o.OrderStatus is null then -1 else o.OrderStatus end [Status],
        isnull(rt.BeginTime,'') BeginTime,
        isnull(rt.EndTime,'') EndTime,
        rt.PaymentMethod ,
        o.AuditStatus ,
        rt.TaskCycle ,
        isnull(o.CreateTime,'') ReceivedTime,
        b.logo ,
        o.Id myReceivedTaskId,
        isnull(o.AuditTime,'') AuditTime,
        o.Id orderId
from    dbo.RenRenTask rt ( nolock )
        left join dbo.[Order] o ( nolock ) on rt.Id = o.TaskId
                                              and o.ClienterId =  ${userId}
		join dbo.Business b (nolock) on rt.BusinessId = b.Id 
where o.ClienterId is not null and o.OrderStatus = 0
	  <if test="nextId != 0" >
         and o.Id > ${nextId}
     </if>
order by o.Id asc;
  </select>   
    <!--  我的任务  已领取 -->
   <select id="getMyReceivedTaskListTotal" resultType="java.lang.Integer" parameterType="com.renrentui.renrenentity.req.TaskReq" >
   	select count(1) from dbo.RenRenTask rt ( nolock )
        left join dbo.[Order] o ( nolock ) on rt.Id = o.TaskId and o.ClienterId = ${userId} 
where o.ClienterId is not null and o.OrderStatus = 0 
 	 <if test="nextId != 0" >
         and o.Id > ${nextId}
     </if>
  </select> 
  <!-- 我的任务  审核中  未通过 -->
   <select id="getSubmittedTaskList" resultType="com.renrentui.renrenentity.domain.TaskModel" parameterType="com.renrentui.renrenentity.req.TaskReq" >
   
   	select 
   	<if test="itemsCount != 0" >
   		top  ${itemsCount} 
   	</if> 
       rt.Id TaskId ,
                rt.TaskGeneralInfo ,
                rt.Pusher ,
                rt.TaskTitle TaskName ,
                rt.Amount ,
                rt.AvailableCount ,
                case  when o.OrderStatus is null then -1 else o.OrderStatus end [Status], o.AuditStatus ,
                isnull(rt.BeginTime,'') BeginTime,
                isnull(rt.EndTime,'') EndTime,
                rt.PaymentMethod ,
                rt.TaskCycle ,
                isnull(o.CreateTime,'') ReceivedTime ,
                isnull(o.FinishTime,'') FinishTime,
                o.Id myReceivedTaskId,
                o.Id orderId,isnull(o.AuditTime,'') AuditTime,
                o.CancelTime,
                o.DealLineTime,
                b.logo,
                (case when rt.EndTime>getdate() and rt.AvailableCount>0 and rt.Status=1 and rt.Id not in (
					 select TaskId from dbo.[Order](nolock) where ClienterId=${userId} and OrderStatus=0
                ) then 1 else 0 end) IsAgainPickUp,
                (SELECT count(1) FROM dbo.[Order] oo(nolock) where oo.TaskId = rt.id
and oo.AuditStatus = 0 AND oo.OrderStatus=1) WaitAuditCount 
from    dbo.[Order] o join dbo.RenRenTask rt on rt.Id = o.TaskId  and o.ClienterId = ${userId}
		join dbo.Business b (nolock) on rt.BusinessId = b.Id 
where  1=1 
      <if test="orderStatus != null" >
       and   o.orderStatus = #{orderStatus,jdbcType=SMALLINT}
      </if>
     <if test="auditStatus != null" >
        and  auditStatus = #{auditStatus,jdbcType=SMALLINT}
      </if>
	  <if test="nextId != 0" >
         and o.Id > ${nextId}
     </if>
order by o.Id asc;
  </select>   
    <!-- 我的任务  审核中  未通过 -->
  <select id="getSubmittedTaskListTotal" resultType="java.lang.Integer" parameterType="com.renrentui.renrenentity.req.TaskReq" >
   	select count(1) from  dbo.[Order] o
                join dbo.RenRenTask rt on rt.Id = o.TaskId and o.ClienterId =  ${userId} where  1=1 
      <if test="orderStatus != null" >
        and  o.orderStatus = #{orderStatus,jdbcType=SMALLINT}  
      </if>
     <if test="auditStatus != null" >
       and auditStatus = #{auditStatus,jdbcType=SMALLINT}
      </if>
     <if test="nextId != 0" >
         and o.Id > ${nextId}
     </if>
  </select> 
  <!-- 超时取消任务服务  add by caoheyang 20151010 -->
	<update id="outTimeCanelTask">
		update dbo.RenRenTask set Status=3
		output inserted.Id,3,'系统服务','超时任务自动过期' into RenRenTasklog (RenRenTaskId,
		OptType,
		OptName,
		Remark)
		where EndTime 
<![CDATA[<]]>
		=GETDATE()
		   and Status=1
	</update>
	  <update id="update" parameterType="com.renrentui.renrenentity.RenRenTask" >
    update RenRenTask
    set TaskTitle = #{taskTitle,jdbcType=NVARCHAR},
      TaskNotice = #{taskNotice,jdbcType=NVARCHAR},
      TaskGeneralInfo = #{taskGeneralInfo,jdbcType=NVARCHAR},
      BusinessId = #{businessId,jdbcType=BIGINT},
      Pusher = #{pusher,jdbcType=NVARCHAR},
      ModifyName = #{modifyName,jdbcType=NVARCHAR},
      ModifyTime = getdate(),
      BeginTime = #{beginTime,jdbcType=TIMESTAMP},
      EndTime = #{endTime,jdbcType=TIMESTAMP},
      TaskCycle = #{taskCycle,jdbcType=DOUBLE},
      AvailableCount = #{availableCount,jdbcType=INTEGER},
      Amount = #{amount,jdbcType=DECIMAL},
      Status = #{status,jdbcType=INTEGER},
      TaskTotalCount = #{taskTotalCount,jdbcType=INTEGER},
      SnapshotTemplateId = #{snapshotTemplateId,jdbcType=BIGINT},
      Link = #{link,jdbcType=NVARCHAR},
      PaymentMethod = #{paymentMethod,jdbcType=SMALLINT},
      AuditCycle=#{auditCycle,jdbcType=INTEGER},
      TaskNote = #{taskNote,jdbcType=NVARCHAR},
      TargetPeople = #{targetPeople,jdbcType=INTEGER},
      CompanySummary= #{companySummary,jdbcType=NVARCHAR}
    where Id = #{id,jdbcType=BIGINT} and (Status=0 or Status=2)
  </update>
     <select id="getListByTemplateId" resultType="com.renrentui.renrenentity.RenRenTask" parameterType="java.lang.Long" >
   SELECT a.* FROM RenRenTask a with(nolock) JOIN 
  dbo.TemplateSnapshot b with(nolock) 
  ON a.SnapshotTemplateId=b.id  
  where  b.TemplateId = #{templateId,jdbcType=BIGINT} and (a.Status=0 or a.Status=2)
  </select> 
 
  <!-- 统计我的任务列表   已领取 审核中 未通过 -的数量信息  add by caoheyang  20151026-->
   <select id="getMyJobCount" resultType="com.renrentui.renrenentity.domain.MyJobTaskDomain" parameterType="com.renrentui.renrenentity.req.TaskReq" >
   select   ISNULL(SUM(CASE when OrderStatus = 0
                                 and AuditStatus = 0 then 1
                            else 0
                       end), 0) ReceivedCount ,
            ISNULL(SUM(CASE when OrderStatus = 1
                                 and AuditStatus = 0 then 1
                            else 0
                       end), 0) PassCount ,
            ISNULL(SUM(CASE when OrderStatus = 1
                                 and AuditStatus = 3 then 1
                            else 0
                       end), 0) NoPassCount
   from     dbo.[Order] o
            join dbo.RenRenTask rt on rt.Id = o.TaskId where  o.ClienterId =  ${userId} 
  </select> 
  
</mapper>