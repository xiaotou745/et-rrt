<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.renrentui.renrenapi.dao.inter.IClienterFinanceAcountDao" >
  <resultMap id="BaseResultMap" type="com.renrentui.renrenentity.ClienterFinanceAcount" >
    <result column="Id" property="id" jdbcType="INTEGER" />
    <result column="ClienterId" property="clienterid" jdbcType="INTEGER" />
    <result column="TrueName" property="truename" jdbcType="NVARCHAR" />
    <result column="AccountNo" property="accountno" jdbcType="VARCHAR" />
    <result column="IsEnable" property="isenable" jdbcType="BIT" />
    <result column="AccountType" property="accounttype" jdbcType="SMALLINT" />
    <result column="BelongType" property="belongtype" jdbcType="SMALLINT" />
    <result column="OpenBank" property="openbank" jdbcType="NVARCHAR" />
    <result column="OpenSubBank" property="opensubbank" jdbcType="NVARCHAR" />
    <result column="CreateBy" property="createby" jdbcType="NVARCHAR" />
    <result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="UpdateBy" property="updateby" jdbcType="NVARCHAR" />
    <result column="UpdateTime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="IDCard" property="idcard" jdbcType="VARCHAR" />
    <result column="OpenProvince" property="openprovince" jdbcType="VARCHAR" />
    <result column="OpenCity" property="opencity" jdbcType="VARCHAR" />
    <result column="YeepayKey" property="yeepaykey" jdbcType="VARCHAR" />
    <result column="YeepayStatus" property="yeepaystatus" jdbcType="SMALLINT" />
    <result column="OpenProvinceCode" property="openprovincecode" jdbcType="INTEGER" />
    <result column="OpenCityCode" property="opencitycode" jdbcType="INTEGER" />
  </resultMap>
    <sql id="Base_Column_List" >
    Id, ClienterId, TrueName, AccountNo, IsEnable, AccountType, BelongType, OpenBank, 
    OpenSubBank, CreateBy, CreateTime, UpdateBy, UpdateTime, IDCard, OpenProvince, OpenCity, 
    YeepayKey, YeepayStatus, OpenProvinceCode, OpenCityCode
  </sql>
  <select id="select" resultType="com.renrentui.renrenentity.ClienterFinanceAcount" parameterType="java.util.HashMap" >
    select top 1 
    <include refid="Base_Column_List" />
    from ClienterFinanceAcount with(nolock) 
	where ClienterId=#{clienterid,jdbcType=INTEGER} 
	and AccountType=#{accounttype,jdbcType=SMALLINT}
  </select>
  <insert id="insert" parameterType="com.renrentui.renrenentity.ClienterFinanceAcount" >
    insert into ClienterFinanceAcount (ClienterId, TrueName, 
      AccountNo, IsEnable, AccountType, 
      BelongType, OpenBank, OpenSubBank, 
      CreateBy, CreateTime, UpdateBy, 
      UpdateTime, IDCard, OpenProvince, 
      OpenCity, YeepayKey, YeepayStatus, 
      OpenProvinceCode, OpenCityCode)
    values (#{clienterid,jdbcType=INTEGER}, #{truename,jdbcType=NVARCHAR}, 
      #{accountno,jdbcType=VARCHAR}, #{isenable,jdbcType=BIT}, #{accounttype,jdbcType=SMALLINT}, 
      #{belongtype,jdbcType=SMALLINT}, #{openbank,jdbcType=NVARCHAR}, #{opensubbank,jdbcType=NVARCHAR}, 
      #{createby,jdbcType=NVARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{updateby,jdbcType=NVARCHAR}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{idcard,jdbcType=VARCHAR}, #{openprovince,jdbcType=VARCHAR}, 
      #{opencity,jdbcType=VARCHAR}, #{yeepaykey,jdbcType=VARCHAR}, #{yeepaystatus,jdbcType=SMALLINT}, 
      #{openprovincecode,jdbcType=INTEGER}, #{opencitycode,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.renrentui.renrenentity.ClienterFinanceAcount" >
    insert into ClienterFinanceAcount
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="clienterid != null" >
        ClienterId,
      </if>
      <if test="truename != null" >
        TrueName,
      </if>
      <if test="accountno != null" >
        AccountNo,
      </if>
      <if test="isenable != null" >
        IsEnable,
      </if>
      <if test="accounttype != null" >
        AccountType,
      </if>
      <if test="belongtype != null" >
        BelongType,
      </if>
      <if test="openbank != null" >
        OpenBank,
      </if>
      <if test="opensubbank != null" >
        OpenSubBank,
      </if>
      <if test="createby != null" >
        CreateBy,
      </if>
        CreateTime,
      <if test="updateby != null" >
        UpdateBy,
      </if>
        UpdateTime,
      <if test="idcard != null" >
        IDCard,
      </if>
      <if test="openprovince != null" >
        OpenProvince,
      </if>
      <if test="opencity != null" >
        OpenCity,
      </if>
      <if test="yeepaykey != null" >
        YeepayKey,
      </if>
      <if test="yeepaystatus != null" >
        YeepayStatus,
      </if>
      <if test="openprovincecode != null" >
        OpenProvinceCode,
      </if>
      <if test="opencitycode != null" >
        OpenCityCode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="clienterid != null" >
        #{clienterid,jdbcType=INTEGER},
      </if>
      <if test="truename != null" >
        #{truename,jdbcType=NVARCHAR},
      </if>
      <if test="accountno != null" >
        #{accountno,jdbcType=VARCHAR},
      </if>
      <if test="isenable != null" >
        #{isenable,jdbcType=BIT},
      </if>
      <if test="accounttype != null" >
        #{accounttype,jdbcType=SMALLINT},
      </if>
      <if test="belongtype != null" >
        #{belongtype,jdbcType=SMALLINT},
      </if>
      <if test="openbank != null" >
        #{openbank,jdbcType=NVARCHAR},
      </if>
      <if test="opensubbank != null" >
        #{opensubbank,jdbcType=NVARCHAR},
      </if>
      <if test="createby != null" >
        #{createby,jdbcType=NVARCHAR},
      </if>
        getdate(),
      <if test="updateby != null" >
        #{updateby,jdbcType=NVARCHAR},
      </if>
 		getdate(),
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="openprovince != null" >
        #{openprovince,jdbcType=VARCHAR},
      </if>
      <if test="opencity != null" >
        #{opencity,jdbcType=VARCHAR},
      </if>
      <if test="yeepaykey != null" >
        #{yeepaykey,jdbcType=VARCHAR},
      </if>
      <if test="yeepaystatus != null" >
        #{yeepaystatus,jdbcType=SMALLINT},
      </if>
      <if test="openprovincecode != null" >
        #{openprovincecode,jdbcType=INTEGER},
      </if>
      <if test="opencitycode != null" >
        #{opencitycode,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateSelective" parameterType="com.renrentui.renrenentity.ClienterFinanceAcount" >
    update ClienterFinanceAcount
    <set >
      <if test="clienterid != null" >
        ClienterId = #{clienterid,jdbcType=INTEGER},
      </if>
      <if test="truename != null" >
        TrueName = #{truename,jdbcType=NVARCHAR},
      </if>
      <if test="accountno != null" >
        AccountNo = #{accountno,jdbcType=VARCHAR},
      </if>
      <if test="isenable != null" >
        IsEnable = #{isenable,jdbcType=BIT},
      </if>
      <if test="accounttype != null" >
        AccountType = #{accounttype,jdbcType=SMALLINT},
      </if>
      <if test="belongtype != null" >
        BelongType = #{belongtype,jdbcType=SMALLINT},
      </if>
      <if test="openbank != null" >
        OpenBank = #{openbank,jdbcType=NVARCHAR},
      </if>
      <if test="opensubbank != null" >
        OpenSubBank = #{opensubbank,jdbcType=NVARCHAR},
      </if>
      <if test="createby != null" >
        CreateBy = #{createby,jdbcType=NVARCHAR},
      </if>
      <if test="updateby != null" >
        UpdateBy = #{updateby,jdbcType=NVARCHAR},
      </if>
        UpdateTime = getdate(),
      <if test="idcard != null" >
        IDCard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="openprovince != null" >
        OpenProvince = #{openprovince,jdbcType=VARCHAR},
      </if>
      <if test="opencity != null" >
        OpenCity = #{opencity,jdbcType=VARCHAR},
      </if>
      <if test="yeepaykey != null" >
        YeepayKey = #{yeepaykey,jdbcType=VARCHAR},
      </if>
      <if test="yeepaystatus != null" >
        YeepayStatus = #{yeepaystatus,jdbcType=SMALLINT},
      </if>
      <if test="openprovincecode != null" >
        OpenProvinceCode = #{openprovincecode,jdbcType=INTEGER},
      </if>
      <if test="opencitycode != null" >
        OpenCityCode = #{opencitycode,jdbcType=INTEGER},
      </if>
    </set>
    where id=#{id,jdbcType=INTEGER}
  </update>
  <!-- 更新骑士提现表状态并写日志 wangchao -->
  <update id="clienterWithdrawPayOk" parameterType="com.renrentui.renrenentity.domain.ClienterWithdrawLogModel" >
    UPDATE ClienterWithdrawForm 
    <set >
      <if test="isCallBack > 0" >
          CallBackTime=getdate(),CallBackRequestId=#{callBackRequestId,jdbcType=BIGINT},
      </if>
        [Status] = #{status,jdbcType=INTEGER},Payer=#{operator,jdbcType=VARCHAR},PayTime=getdate() 
    </set>
		OUTPUT
		  Inserted.Id,
		  Inserted.[Status],
		  #{remark,jdbcType=VARCHAR},
		  #{operator,jdbcType=VARCHAR},
		  getdate()
		INTO ClienterWithdrawLog
		  ([WithwardId],
		  [Status],
		  [Remark],
		  [Operator],
		  [OperatTime])
		 WHERE  Id = #{withwardId,jdbcType=BIGINT} AND [Status]=#{oldStatus,jdbcType=INTEGER}
  </update>
  <!-- 修改骑士提款流水状态 wangchao -->
  <update id="modifyClienterBalanceRecordStatus" parameterType="com.renrentui.renrenentity.domain.ClienterWithdrawLogModel" >
    UPDATE ClienterBalanceRecord SET [Status] = 1 WHERE OrderId = #{withwardId,jdbcType=BIGINT} AND [Status]=2 and RecordType IN(2,6)
  </update>
    <!-- 骑士提现打款确认后修改骑士表累计提款金额 wangchao -->
  <update id="modifyClienterTotalAmount" parameterType="com.renrentui.renrenentity.domain.ClienterWithdrawLogModel" >
    update c
		set c.HadWithdraw=ISNULL(c.HadWithdraw, 0)+ISNULL(cwf.Amount,0)
		from dbo.ClienterBalance c
		join [ClienterWithdrawForm] cwf on c.ClienterId=cwf.ClienterId
		where cwf.Id=#{withwardId,jdbcType=BIGINT};
  </update>
  <select id="getClienterFinanceAccount" resultType="com.renrentui.renrenentity.domain.ClienterFinanceAcountModel" parameterType="java.lang.Long" >
    SELECT cwf.Id withdrawId,cwf.clienterId,cwf.CreateTime,cwf.Amount,cwf.HandCharge,cwf.PayFailedReason FROM dbo.ClienterWithdrawForm cwf(nolock)
 where cwf.Id = #{withwardId,jdbcType=BIGINT};
  </select>
  
  <update id="clienterWithdrawPayFailed" parameterType="com.renrentui.renrenentity.domain.ClienterWithdrawLogModel" >
    UPDATE ClienterWithdrawForm 
    <set >
      <if test="isCallBack > 0" >
          CallBackTime=getdate(),CallBackRequestId=#{callBackRequestId,jdbcType=BIGINT},
      </if>
        [Status] = #{status,jdbcType=INTEGER},Payer=#{operator,jdbcType=VARCHAR},PayTime=getdate(),
        PayFailedReason=ISNULL(PayFailedReason,'')+#{payFailedReason,jdbcType=VARCHAR}+' '
    </set>
		OUTPUT
		  Inserted.Id,
		  Inserted.[Status],
		  #{remark,jdbcType=VARCHAR},
		  #{operator,jdbcType=VARCHAR},
		  getdate()
		INTO ClienterWithdrawLog
		  ([WithwardId],
		  [Status],
		  [Remark],
		  [Operator],
		  [OperatTime])
		 WHERE  Id = #{withwardId,jdbcType=BIGINT} AND [Status] in(1,20) 
  </update>
    <!-- 骑士提现打款失败后修改骑士表累计提款金额 wangchao -->
  <update id="modifyClienterAmountInfo" parameterType="com.renrentui.renrenentity.domain.ClienterWithdrawLogModel" >
   update c
		set  c.Balance=ISNULL(c.Balance, 0)+ISNULL(cwf.Amount,0),
		      c.Withdraw=ISNULL(c.Withdraw,0)+ISNULL(cwf.Amount,0)
		from dbo.ClienterBalance(nolock) c
		join [ClienterWithdrawForm](nolock) cwf on c.ClienterId=cwf.ClienterId
		where cwf.Id=#{withwardId,jdbcType=BIGINT};
  </update>
  
</mapper>